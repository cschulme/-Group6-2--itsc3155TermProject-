
/* --- Content --- */
.content {
    /* Position in container grid */
    grid-area: content;
    background-color: rgba(255, 255, 255, 0.5);
    
    padding: 10px;
    overflow: auto;
}

/* --- Event List --- */
.eventsListContainer {
    overflow-y: auto;
    height: 90%;
}

.noEvents {
    text-align: center;
}

.noEvents i {
    font-size: 100px;
}

.eventsBox {
    height: 10%;
    margin-bottom: 10px;
    box-shadow: -5px 0px 10px rgba(54, 54, 54, 0.25), 5px 0px 10px rgba(54, 54, 54, 0.25);
    
    display: grid;
    grid-template-columns: 10px 30px 30px 30px 20fr 35fr 10px;
    grid-template-areas:
        "indicator viewBox editBox deleteBox verticalBox1 verticalBox2 cap";
}

.viewBox, .editBox, .deleteBox, .newBoxTag, .editBoxTag, .deleteBoxTag, .editBoxEvent, .deleteBoxEvent {
    font-size: 2vmin;
    display: flex;
    justify-content: center;
    align-items: center;

    color: white;
    text-decoration: none;
}

.viewBox {
    grid-area: viewBox;
    background: linear-gradient(to bottom right, rgba(102, 180, 252, 0.9), rgba(40, 149, 251, 0.9));
}

.editBox, .editBoxEvent {
    grid-area: editBox;
    position: relative;
    background: linear-gradient(to bottom right, rgba(40, 149, 251, 0.9), rgba(32, 108, 183, 0.9));
}

.deleteBox, .deleteBoxEvent {
    grid-area: deleteBox;
    position: relative;
    background: linear-gradient(to bottom right, rgba(32, 108, 183, 0.9), rgba(20, 68, 117, 0.9));
}

.viewBox:hover {
    background: linear-gradient(to bottom right, rgba(40, 149, 251, 0.9), rgba(102, 180, 252, 0.9));
}

.editBox:hover, .editBoxEvent:hover {
    background: linear-gradient(to bottom right, rgba(32, 108, 183, 0.9), rgba(40, 149, 251, 0.9));
}

.deleteBox:hover, .deleteBoxEvent:hover {
    background: linear-gradient(to bottom right, rgba(20, 68, 117, 0.9), rgba(32, 108, 183, 0.9));
}

.editBoxEvent::after {
    content: "Edit this event.";
    display: inline-block;
    position: absolute;
    background: linear-gradient(to bottom right, rgba(32, 108, 183, 0.9), rgba(20, 68, 117, 0.9));
    color: white;
    font-size: 2vmin;
    padding: 10px;
    right: 125%;
    bottom: 25%;
    white-space: nowrap;
    transform: scale(0);
    transition: transform ease-out 150ms;
}

.deleteBoxEvent::after {
    content: "Delete this event.";
    display: inline-block;
    position: absolute;
    background: linear-gradient(to bottom right, rgba(32, 108, 183, 0.9), rgba(20, 68, 117, 0.9));
    color: white;
    font-size: 2vmin;
    padding: 10px;
    right: 225%;
    bottom: 25%;
    white-space: nowrap;
    transform: scale(0);
    transition: transform ease-out 150ms;
}

.editBoxEvent:hover::after {
    transform: scale(1);
    box-shadow: -10px 0px 20px rgba(54, 54, 54, 0.25), 10px 0px 20px rgba(54, 54, 54, 0.25);
}

.deleteBoxEvent:hover::after {
    transform: scale(1);
    box-shadow: -10px 0px 20px rgba(54, 54, 54, 0.25), 10px 0px 20px rgba(54, 54, 54, 0.25);
}

.verticalBox1, .verticalBox2 {
    padding-left: 10px;
}

.verticalBox1 {
    grid-area: verticalBox1;
    
    background: linear-gradient(to bottom right, rgba(255, 255, 255, 0.9), rgba(240, 240, 240, 0.9));
    
    display: grid;
    grid-template-rows: 1.5fr 1fr 1fr;
    grid-template-areas:
        "titleBox"
        "eventsInfoBox1"
        "eventsInfoBox2";
}

.eventsTitleBox {
    grid-area: titleBox;
    height: 100%;
    font-size: 2.3vmin;
    font-weight: bold;
    
    display: flex;
    align-items: center;
}

.verticalBox2 {
    grid-area: verticalBox2;
    
    border-left: 1px black dashed;
    background: linear-gradient(to bottom right, rgba(255, 255, 255, 0.5), rgba(240, 240, 240, 0.5));
    
    display: grid;
    grid-template-rows: 1.5fr 2fr;
    grid-template-areas:
        "informationTitleBox"
        "informationInfoBox";
}

.informationTitleBox {
    grid-area: informationTitleBox;
    font-size: 2vmin;
    font-weight: bold;
    
    display: flex;
    align-items: center;
}

.informationInfoBox {
    grid-area: informationInfoBox;
}

.cap {
    grid-area: cap;
    
    background-color: rgba(34, 111, 184, 0.9);
}

.newEventButton {
    background: linear-gradient(to bottom right, rgb(102, 180, 252), rgb(34, 111, 184));
    display: flex;
    color: white;
    font-size: 2.5vmin;
    text-decoration: none;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 100%;
}

.newEventButton:hover {
    background: linear-gradient(to top left, rgb(102, 180, 252), rgb(102, 180, 252));
}

/* --- Show.html Styling --- */

.showContent {
    grid-area: content;
    background-color: rgba(255, 255, 255, 0.5);
    padding: 10px;
}

.showContentShell {
    height: 90%;
    display: grid;
    grid-template-rows: 1fr 14fr 1fr 2fr 1fr;
    grid-template-columns: 1fr 10fr 2fr 1fr;
    grid-template-areas:
        ". . . ."
        ". showContentContainer showContentContainer ."
        ". . . ."
        ". . optionsBox ."
        ". . . .";
}

.showContentContainer {
    grid-area: showContentContainer;
    box-shadow: -10px 0px 20px rgba(54, 54, 54, 0.25), 10px 0px 20px rgba(54, 54, 54, 0.25);

    display: grid;
    grid-template-rows: auto;
    grid-template-columns: 10px 1fr 1fr 10px;
    grid-template-areas:
        "startCap showBox1 showBox2 cap";
}

.startCap {
    grid-area: startCap;
    
    background-color: rgba(34, 111, 184, 0.9);
}

.optionsBox {
    grid-area: optionsBox;
    
    position: relative;
    box-shadow: -10px 0px 20px rgba(54, 54, 54, 0.25), 10px 0px 20px rgba(54, 54, 54, 0.25);
    
    display: grid;
    grid-template-columns: 10px 1fr 1fr;
    grid-template-rows: auto;
    grid-template-areas:
        "startCap editBox deleteBox";
}

.showBox1 {
    grid-area: showBox1;
    max-height: 530px;
    overflow-y: auto;
    
    background: linear-gradient(to bottom right, rgba(255, 255, 255, 0.9), rgba(240, 240, 240, 0.9));
    
    display: grid;
    grid-template-columns: 1fr 4fr;
    grid-template-rows: 1fr 1fr 1fr;
    grid-template-areas:
        "datetimeBoxTitle datetimeBoxInfo"
        "locationBoxTitle locationBoxInfo"
        "tagBoxTitle tagBoxInfo";
}
 
.datetimeBoxTitle, .locationBoxTitle, .tagBoxTitle1, .tagBoxTitle2 {
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2.5vmin;
    font-weight: bold;
    color: white;
}

.datetimeBoxTitle {
    background: linear-gradient(to bottom right, rgba(102, 180, 252, 0.9), rgba(40, 149, 251, 0.9));
}

.locationBoxTitle {
    background: linear-gradient(to bottom right, rgba(40, 149, 251, 0.9), rgba(32, 108, 183, 0.9));
}

.tagBoxTitle1 {
    background: linear-gradient(to bottom right, rgba(32, 108, 183, 0.9), rgba(20, 68, 117, 0.9));
}

.tagBoxTitle2 {
    background: linear-gradient(to bottom right, rgba(40, 149, 251, 0.9), rgba(32, 108, 183, 0.9));
}

.datetimeBoxInfo, .locationBoxInfo, .tagBoxInfo {
    padding-left: 10px;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    font-size: 2.5vmin;
}

.datetimeBoxInfo, .locationBoxInfo {
    border-bottom: 1px black dashed;
}

.showBox2 {
    grid-area: showBox2;
    padding: 10px;
    max-height: 510px;
    background: linear-gradient(to bottom right, rgba(255, 255, 255, 0.65), rgba(240, 240, 240, 0.65));
    border-left: 1px black dashed;
    
    display: grid;
    grid-template-columns: 10px 1fr 10px;
    grid-template-rows: 10px 1fr 10px 4fr 10px;
    grid-template-areas:
        ". . ."
        ". informationBoxTitle ."
        ". . ."
        ". informatonBoxInfo ."
        ". . .";
}

.informationBoxTitle {
    grid-area: informationBoxTitle;
    
    background: linear-gradient(to bottom right, rgba(32, 108, 183, 0.9), rgba(20, 68, 117, 0.9));
    color: white;
    font-size: 3vmin;
    font-weight: bold;
    
    display: flex;
    align-items: center;
    justify-content: center;
}

.informatonBoxInfo {
    grid-area: informatonBoxInfo;
    
    overflow-y: auto;
    font-size: 2.5vmin;
}

.basicButton {
    grid-area: backButton;
    margin-top: 5px;
    height: 8%;
    width: 100%;
    background: linear-gradient(to bottom right, rgba(40, 149, 251, 0.9), rgba(32, 108, 183, 0.9));
    display: flex;
    color: white;
    font-size: 2.5vmin;
    font-weight: bold;
    text-decoration: none;
    justify-content: center;
    align-items: center;
}

.basicButton:hover {
    background: linear-gradient(to bottom right, rgb(34, 111, 184), rgb(102, 180, 252));
    transition: 0.3s;
    transition: 0.3s;
}

.eventFormContainer {
    grid-area: content;
    
    height: 100%;
    width: 100%;
}

.eventForm {
    height: 90%;
    display: grid;
    grid-template-columns: 1fr 5fr;
    grid-template-rows: 1fr 1fr 4fr 1fr 1fr 1fr 1fr;
    grid-template-areas:
        "labelBoxSmall dataBoxSmall"
        "labelBoxSmall dataBoxSmall"
        "labelBoxLarge dataBoxLarge"
        "labelBoxSmall dataBoxSmall"
        "labelBoxSmall dataBoxSmall"
        "labelBoxSmall dataBoxSmall"
        "labelBoxSmall dataBoxSmall";
    grid-gap: 5px;
}

.labelBoxSmall {
    grid-area: "labelBoxSmall";
    
    background: linear-gradient(to bottom right, rgba(32, 108, 183, 0.9), rgba(20, 68, 117, 0.9));
    color: white;
    padding: 10px;
    font-size: 2.5vmin;
    text-align: center;
}

.labelBoxLarge {
    grid-area: "labelBoxLarge";
    
    background: linear-gradient(to bottom right, rgba(32, 108, 183, 0.9), rgba(20, 68, 117, 0.9));
    color: white;
    padding: 10px;
    font-size: 2.5vmin;
    text-align: center;
}

.dataBoxSmall {
    grid-area: "dataBoxSmall";
    
    display: flex;
    align-items: center;
    justify-content: space-between;
    
    overflow: auto;
    padding: 5px;
    background-color: rgba(255, 255, 255, 0.5);
    font-size: 2.5vmin;
}

.dataBoxLarge {
    grid-area: "dataBoxLarge";
    
    overflow-y: auto;
    padding: 5px;
    background-color: rgba(255, 255, 255, 0.5);
    font-size: 2.5vmin;
}

.eventForm input[type=text] {
    width: calc(100% - 10px);
    height: calc(100% - 5px);
    border: none;
    font-size: 2.5vmin;
    padding-left: 5px;
}

.eventForm textarea {
    padding-left: 5px;
    width: calc(100% - 12px);
    height: calc(100% - 11px);
    resize: none;
    border: none;
    font-size: 2.5vmin;
}

.eventForm select {
    display: flex;
    flex-grow: 1;
    /*
    width: 31%;
    height: 100%;
    */
    font-size: 2.5vmin;
    background-color: white;
}

.eventForm input[type=submit], .eventForm input[type=reset] {
    color: white;
    display: inline-block;
    font-size: 2.5vmin;
    float: left;
    border: none;
    background: linear-gradient(to bottom right, rgb(102, 180, 252), rgb(34, 111, 184));
    padding: 5px;
    width: calc(50% - 5px);
    text-decoration: none;
    cursor: pointer;
}

.eventForm input[type=submit]:hover, .eventForm input[type=reset]:hover {
    background: linear-gradient(to bottom right, rgb(34, 111, 184), rgb(102, 180, 252));
    transition: 0.3s;
    transition: 0.3s;
}

.eventForm input[type=submit] {
    margin-right: 10px;
}

.eventsButtons {
    height: 100%;
}

.basicButton1 {
    margin-top: 5px;
    height: 8%;
    width: 49.5%;
    float: left;
    background: linear-gradient(to bottom right, rgba(40, 149, 251, 0.9), rgba(32, 108, 183, 0.9));
    display: flex;
    color: white;
    font-size: 2.5vmin;
    font-weight: bold;
    text-decoration: none;
    justify-content: center;
    align-items: center;
}

.basicButton1:hover {
    background: linear-gradient(to bottom right, rgb(34, 111, 184), rgb(102, 180, 252));
    transition: 0.3s;
    transition: 0.3s;
}

.basicButton2 {
    margin-top: 5px;
    height: 8%;
    width: 49.5%;
    float: right;
    background: linear-gradient(to bottom right, rgba(40, 149, 251, 0.9), rgba(32, 108, 183, 0.9));
    display: flex;
    color: white;
    font-size: 2.5vmin;
    font-weight: bold;
    text-decoration: none;
    justify-content: center;
    align-items: center;
}

.basicButton2:hover {
    background: linear-gradient(to bottom right, rgb(34, 111, 184), rgb(102, 180, 252));
    transition: 0.3s;
    transition: 0.3s;
}